/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package com.pszymczyk.kafka;

import com.pszymczyk.kafka.api.KafkaTransactionalProducerPool;
import com.pszymczyk.kafka.api.KafkaTransactionalProducerPoolBuilder;
import org.apache.kafka.clients.producer.Producer;
import org.apache.kafka.clients.producer.ProducerConfig;
import org.apache.kafka.common.serialization.StringSerializer;
import org.junit.jupiter.api.Test;

import java.util.Map;

import static org.junit.jupiter.api.Assertions.assertNotNull;
import static org.junit.jupiter.api.Assertions.assertNull;

class KafkaTransactionProducerPoolTest {

    @Test
    void shouldCreateTransactionalProducersPool() {
        //given
        String txIdPrefix = "my-app";

        Map<String, Object> configs = Map.of(
                ProducerConfig.BOOTSTRAP_SERVERS_CONFIG, "localhost:9092",
                ProducerConfig.KEY_SERIALIZER_CLASS_CONFIG, StringSerializer.class,
                ProducerConfig.VALUE_SERIALIZER_CLASS_CONFIG, StringSerializer.class);

        KafkaTransactionalProducerPool<String, String> transactionalProducerPool = new KafkaTransactionalProducerPoolBuilder<String, String>()
                .withPoolSize(2)
                .withConfigs(configs)
                .withTransactionalIdPrefix(txIdPrefix)
                .build();

        //when
        Producer<String, String> first = transactionalProducerPool.getTransactionalProducer();
        Producer<String, String> second = transactionalProducerPool.getTransactionalProducer();
        Producer<String, String> third = transactionalProducerPool.getTransactionalProducer();

        //then
        assertNotNull(first);
        assertNotNull(second);
        assertNull(third);
    }

    @Test
    void shouldReleaseProducer() {
        //given
        String txIdPrefix = "my-app";

        Map<String, Object> configs = Map.of(
                ProducerConfig.BOOTSTRAP_SERVERS_CONFIG, "localhost:9092",
                ProducerConfig.KEY_SERIALIZER_CLASS_CONFIG, StringSerializer.class,
                ProducerConfig.VALUE_SERIALIZER_CLASS_CONFIG, StringSerializer.class);

        KafkaTransactionalProducerPool<String, String> transactionalProducerPool = new KafkaTransactionalProducerPoolBuilder<String, String>()
                .withPoolSize(2)
                .withConfigs(configs)
                .withTransactionalIdPrefix(txIdPrefix)
                .build();

        //when
        Producer<String, String> first = transactionalProducerPool.getTransactionalProducer();
        assertNotNull(first);
        assertNotNull(transactionalProducerPool.getTransactionalProducer());

        //then
        assertNull(transactionalProducerPool.getTransactionalProducer());

        //and
        first.close();

        //then producer is released
        assertNotNull(transactionalProducerPool.getTransactionalProducer());
    }
}